<!doctype html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Pratos da Semana</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.4/font/bootstrap-icons.css">
  <style>
    .prato-do-dia {
      border: 2px solid #ffc107;
      box-shadow: 0 0 10px rgba(255,193,7,0.2);
    }
    .imagem-prato {
      height: 140px;
      object-fit: cover;
    }
    .curtir-btn.active {
      color: #ffffff;
      font-weight: 600;
    }
    .comentarios {
      max-height: 160px;
      overflow-y: auto;
    }
    .carousel-day-indicator { cursor: pointer; }
    .day-title { font-weight: 600; text-transform: capitalize; }
    .card-prato { min-height: 260px; }

    /* ===== melhorias para controles do carrossel ===== */
    /* remove os ícones de fundo padrão do bootstrap */
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
      background-image: none !important;
    }

    /* estilo visível e acessível para os botões */
    .carousel-control-prev,
    .carousel-control-next {
      width: 44px;
      height: 44px;
      background: rgba(0,0,0,0.45);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      top: 50%;
      transform: translateY(-50%);
      z-index: 5;
      opacity: 1;
      border: none;
    }

    .carousel-control-prev { left: 5px; }
    .carousel-control-next { right: 5px; }

    .carousel-control-prev .bi,
    .carousel-control-next .bi {
      color: #fff;
      font-size: 1.25rem;
      pointer-events: none;
    }

    .carousel-control-prev:focus,
    .carousel-control-next:focus {
      box-shadow: 0 0 0 0.25rem rgba(13,110,253,0.25);
      outline: none;
    }

    /* indicadores – dar destaque ao ativo */
    .carousel-day-indicator.active {
      background-color: #0d6efd;
      color: #fff;
      border-color: #0d6efd;
    }

    /* espaço lateral dentro do carrossel para evitar sobreposição das setas */
    .carousel-inner {
      padding-left: 64px;
      padding-right: 64px;
    }

    /* cabeçalho do carrossel alinhado ao conteúdo do carrossel */
    .carousel-header {
      padding-left: 64px;
      padding-right: 64px;
    }

    @media (max-width: 767.98px) {
      .carousel-inner,
      .carousel-header {
        padding-left: 12px;
        padding-right: 12px;
      }
      /* em telas muito pequenas, esconder setas para evitar sobreposição */
      .carousel-control-prev,
      .carousel-control-next {
        display: none;
      }
    }
  </style>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
  <div class="container">
    <a class="navbar-brand" href="/">RU ICET</a>
    <div class="d-flex">
      <a class="btn btn-outline-danger me-2" href="/logout">Logout</a>
    </div>
  </div>
</nav>

<div class="container">
  <% if (typeof mensagem !== 'undefined' && mensagem) { %>
    <div class="alert alert-info"><%= mensagem %></div>
  <% } %>

  <h1 class="mb-3">Pratos da Semana</h1>

  <% 
    const diasOrder = ['segunda','terca','quarta','quinta','sexta'];
    const agrupados = {};
    diasOrder.forEach(d => agrupados[d] = []);
    (pratos || []).forEach(p => {
      const d = (p.dia_semana || '').toLowerCase();
      if (agrupados[d]) agrupados[d].push(p);
    });
  %>

  <% if ((pratos || []).length === 0) { %>
    <div class="alert alert-warning">Nenhum prato disponível no momento.</div>
  <% } else { %>

  <div id="diasCarouselContainer" class="mb-4">
    <div class="d-flex align-items-center mb-2 carousel-header">
      <div class="me-auto day-title">Deslize por dia</div>
      <div class="small text-muted">Use os controles ou os indicadores abaixo</div>
    </div>

    <div id="diasCarousel" class="carousel slide" data-bs-ride="false">
      <div class="carousel-inner">
        <% diasOrder.forEach(function(dia, idx) { %>
          <div class="carousel-item <%= idx === 0 ? 'active' : '' %>">
            <div class="card mb-3">
              <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                  <div>
                    <h4 class="mb-0 text-capitalize"><%= dia %></h4>
                    <small class="text-muted"><%= agrupados[dia].length %> prato(s)</small>
                  </div>
                </div>

                <div class="row g-3 justify-content-center">
                  <% if (agrupados[dia].length === 0) { %>
                    <div class="col-12">
                      <div class="alert alert-light mb-0">Nenhum prato cadastrado para <strong class="text-capitalize"><%= dia %></strong>.</div>
                    </div>
                  <% } else { %>
                    <% agrupados[dia].forEach(function(prato) { %>
                      <!-- centraliza e permite até 3 cards por linha: col-12 (xs), col-sm-6 (>=576px), col-md-4 (>=768px) -->
                      <div class="col-12 col-sm-6 col-md-4">
                        <div class="card h-100 card-prato <%= prato.prato_dia ? 'prato-do-dia' : '' %>">
                          <img src="/images/<%= prato.imagem || 'placeholder.png' %>" class="card-img-top imagem-prato" alt="<%= prato.nome %>">
                          <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between align-items-start mb-1">
                              <h5 class="card-title mb-0"><%= prato.nome %></h5>
                              <% if (prato.prato_dia) { %>
                                <span class="badge bg-warning text-dark">Prato do Dia</span>
                              <% } %>
                            </div>
                            <p class="card-text text-muted small mb-2"><%= prato.descricao || '' %></p>

                            <div class="mt-auto">
                              <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                  <button class="btn btn-sm btn-outline-primary curtir-btn" data-id="<%= prato.id %>">
                                    <i class="bi bi-hand-thumbs-up"></i> Curtir
                                    <span class="ms-1 contador-curtidas"><%= prato.curtidas || 0 %></span>
                                  </button>
                                </div>
                                <small class="text-muted"><%= prato.preco ? 'R$ ' + prato.preco.toFixed(2) : '' %></small>
                              </div>

                              <div class="mb-2">
                                <div class="comentarios list-group" id="comentarios-<%= prato.id %>">
                                  <% if (prato.comentarios && prato.comentarios.length) { %>
                                    <% prato.comentarios.forEach(function(c) { %>
                                      <div class="list-group-item py-2">
                                        <strong class="small"><%= c.autor || 'Usuário' %>:</strong>
                                        <span class="small text-muted"> <%= c.texto %></span>
                                      </div>
                                    <% }) %>
                                  <% } else { %>
                                    <div class="list-group-item py-2 text-muted small">Seja o primeiro a comentar.</div>
                                  <% } %>
                                </div>
                              </div>

                              <form class="comentario-form" data-id="<%= prato.id %>">
                                <div class="input-group input-group-sm">
                                  <input type="text" name="comentario" class="form-control" placeholder="Escreva um comentário..." required>
                                  <button class="btn btn-primary" type="submit">Enviar</button>
                                </div>
                              </form>
                            </div>
                          </div>
                        </div>
                      </div>
                    <% }) %>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        <% }) %>
      </div>

      <!-- substitui os spans padrão por ícones visíveis -->
      <button class="carousel-control-prev" type="button" data-bs-target="#diasCarousel" data-bs-slide="prev" aria-label="Anterior">
        <i class="bi bi-chevron-left" aria-hidden="true"></i>
        <span class="visually-hidden">Anterior</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#diasCarousel" data-bs-slide="next" aria-label="Próximo">
        <i class="bi bi-chevron-right" aria-hidden="true"></i>
        <span class="visually-hidden">Próximo</span>
      </button>

      <div class="mt-3 d-flex justify-content-center gap-2">
        <% diasOrder.forEach(function(dia, idx) { %>
          <button class="btn btn-sm btn-outline-secondary carousel-day-indicator" data-bs-target="#diasCarousel" data-bs-slide-to="<%= idx %>"><%= dia %></button>
        <% }) %>
      </div>
    </div>
  </div>

  <% } %>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
  // mantém os handlers de curtir/comentar funcionando após renderização do carrossel
  function attachHandlers() {
    document.querySelectorAll('.curtir-btn').forEach(btn => {
      if (btn.dataset.attached) return;
      btn.dataset.attached = '1';
      btn.addEventListener('click', async () => {
        const id = btn.getAttribute('data-id');
        try {
          // envia requisição para curtir
          const res = await fetch(`/cardapio/pratos/${id}/curtir`, { method: 'POST' });
          if (res.ok) {
            // atualiza contador e estado do botão
            const json = await res.json();
            const contador = btn.querySelector('.contador-curtidas');
            if (json.curtidas !== undefined) contador.textContent = json.curtidas;
            if (json.liked) btn.classList.add('active'); else btn.classList.remove('active');
          } else {
            console.error('Falha ao curtir');
          }
        } catch (err) { console.error(err); }
      });
    });

    document.querySelectorAll('.comentario-form').forEach(form => {
      if (form.dataset.attached) return;
      form.dataset.attached = '1';
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const id = form.getAttribute('data-id');
        const input = form.querySelector('input[name="comentario"]');
        const texto = input.value.trim();
        if (!texto) return;
        try {
          const res = await fetch(`/cardapio/pratos/${id}/comentar`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ texto })
          });
          if (res.ok) {
            const json = await res.json();
            const lista = document.getElementById('comentarios-' + id);
            const item = document.createElement('div');
            item.className = 'list-group-item py-2';
            item.innerHTML = '<strong class="small">' + (json.comentario.autor || 'Você') + ':</strong> <span class="small text-muted"> ' + json.comentario.texto + '</span>';
            if (lista.children.length === 1 && lista.children[0].classList.contains('text-muted')) {
              lista.innerHTML = '';
            }
            lista.prepend(item);
            input.value = '';
          } else {
            console.error('Falha ao comentar');
          }
        } catch (err) { console.error(err); }
      });
    });
  }

  // inicializa handlers
  attachHandlers();

  // re-attach quando slide mudar (caso conteúdo dinâmico)
  const carouselEl = document.getElementById('diasCarousel');
  if (carouselEl) {
    carouselEl.addEventListener('slid.bs.carousel', () => {
      attachHandlers();
    });
  }
</script>
</body>
</html>